<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20190611 12:44:08.803" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests">
<suite id="s1-s1" name="Delete request" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests\Delete_request.robot">
<test id="s1-s1-t1" name="Validate DELETE Request">
<kw name="Create connection" library="Common_keywords" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.046" level="INFO">Creating Session using : alias=session, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190611 12:44:09.046" endtime="20190611 12:44:09.046"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.046" endtime="20190611 12:44:09.046"></status>
</kw>
<kw name="Send request and validate status code">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>${DELETE_URI}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.192" level="INFO">Delete Request using : alias=session, uri=/api/users/2, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190611 12:44:09.192" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190611 12:44:09.193" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.047" endtime="20190611 12:44:09.193"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20190611 12:44:09.195" level="INFO">${code} = 204</msg>
<status status="PASS" starttime="20190611 12:44:09.194" endtime="20190611 12:44:09.195"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.195" endtime="20190611 12:44:09.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.198" level="INFO"></msg>
<status status="PASS" starttime="20190611 12:44:09.197" endtime="20190611 12:44:09.198"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.047" endtime="20190611 12:44:09.198"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.045" endtime="20190611 12:44:09.200" critical="yes"></status>
</test>
<status status="PASS" starttime="20190611 12:44:08.826" endtime="20190611 12:44:09.203"></status>
</suite>
<suite id="s1-s2" name="Get request" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests\Get_request.robot">
<test id="s1-s2-t1" name="Validate GET Request">
<kw name="Create connection" library="Common_keywords" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.231" level="INFO">Creating Session using : alias=session, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190611 12:44:09.231" endtime="20190611 12:44:09.231"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.231" endtime="20190611 12:44:09.231"></status>
</kw>
<kw name="Send request and validate status code">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>${GET_USERS_URI}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.277" level="INFO">Get Request using : alias=session, uri=/api/users?page=2, headers=None json=None</msg>
<msg timestamp="20190611 12:44:09.277" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190611 12:44:09.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.232" endtime="20190611 12:44:09.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.277" level="INFO">200</msg>
<status status="PASS" starttime="20190611 12:44:09.277" endtime="20190611 12:44:09.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.278" level="INFO">{"page":2,"per_page":3,"total":12,"total_pages":4,"data":[{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"},{"id":5,"email":"charles.morris@reqres.in","first_name":"Charles","last_name":"Morris","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/stephenmoon/128.jpg"},{"id":6,"email":"tracey.ramos@reqres.in","first_name":"Tracey","last_name":"Ramos","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg"}]}</msg>
<status status="PASS" starttime="20190611 12:44:09.278" endtime="20190611 12:44:09.278"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190611 12:44:09.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.278" endtime="20190611 12:44:09.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${response}</arg>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.278" endtime="20190611 12:44:09.279"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.232" endtime="20190611 12:44:09.279"></status>
</kw>
<kw name="Save response to file">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.text}</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${pretty_printed_response}</var>
</assign>
<msg timestamp="20190611 12:44:09.280" level="INFO">To JSON using : content={"page":2,"per_page":3,"total":12,"total_pages":4,"data":[{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"},{"id":5,"email":"charles.morris@reqres.in","first_name":"Charles","last_name":"Morris","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/stephenmoon/128.jpg"},{"id":6,"email":"tracey.ramos@reqres.in","first_name":"Tracey","last_name":"Ramos","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg"}]} </msg>
<msg timestamp="20190611 12:44:09.280" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20190611 12:44:09.280" level="INFO">${pretty_printed_response} = {
    "data": [
        {
            "avatar": "https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg",
            "email": "eve.holt@reqres.in",
            "first_name": "Eve",
     ...</msg>
<status status="PASS" starttime="20190611 12:44:09.279" endtime="20190611 12:44:09.280"></status>
</kw>
<kw name="Create Binary File" library="OperatingSystem">
<doc>Creates a binary file with the given content.</doc>
<arguments>
<arg>${RESPONSES_FOLDER}/${response_file}</arg>
<arg>${pretty_printed_response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.281" level="INFO" html="yes">Created binary file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Responses\get_response.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Responses\get_response.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190611 12:44:09.280" endtime="20190611 12:44:09.281"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.279" endtime="20190611 12:44:09.281"></status>
</kw>
<kw name="Validate response">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${RESPONSES_FOLDER}/${response_file}</arg>
<arg>encoding=UTF-8</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.283" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Responses\get_response.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Responses\get_response.json&lt;/a&gt;'.</msg>
<msg timestamp="20190611 12:44:09.283" level="INFO">${response} = {
    "data": [
        {
            "avatar": "https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg",
            "email": "eve.holt@reqres.in",
            "first_name": "Eve",
     ...</msg>
<status status="PASS" starttime="20190611 12:44:09.283" endtime="20190611 12:44:09.283"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXPECTED_FOLDER}/${expected_file}</arg>
<arg>encoding=UTF-8</arg>
</arguments>
<assign>
<var>${expected}</var>
</assign>
<msg timestamp="20190611 12:44:09.284" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Expected\expected_response.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Expected\expected_response.json&lt;/a&gt;'.</msg>
<msg timestamp="20190611 12:44:09.284" level="INFO">${expected} = {
    "data": [
        {
            "avatar": "https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg",
            "email": "eve.holt@reqres.in",
            "first_name": "Eve",
     ...</msg>
<status status="PASS" starttime="20190611 12:44:09.283" endtime="20190611 12:44:09.284"></status>
</kw>
<kw name="Diff Outputs" library="DiffLibrary">
<doc>Diff between target and source texts</doc>
<arguments>
<arg>${response}</arg>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.288" level="INFO">file1: C:\Users\ryynapet\AppData\Local\Temp\tmp8ct6gmkx.txt</msg>
<msg timestamp="20190611 12:44:09.288" level="INFO">file2: C:\Users\ryynapet\AppData\Local\Temp\tmpm902qdcu.txt</msg>
<msg timestamp="20190611 12:44:09.289" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\DiffLibrary\bin\diff\diff.exe --strip-trailing-cr  "C:\Users\ryynapet\AppData\Local\Temp\tmp8ct6gmkx.txt" "C:\Users\ryynapet\AppData\Local\Temp\tmpm902qdcu.txt"</msg>
<status status="PASS" starttime="20190611 12:44:09.284" endtime="20190611 12:44:09.338"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.283" endtime="20190611 12:44:09.338"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.230" endtime="20190611 12:44:09.338" critical="yes"></status>
</test>
<status status="PASS" starttime="20190611 12:44:09.207" endtime="20190611 12:44:09.341"></status>
</suite>
<suite id="s1-s3" name="Get request specific person" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests\Get_request_specific_person.robot">
<test id="s1-s3-t1" name="Validate GET Request for specific person">
<kw name="Create connection" library="Common_keywords" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.348" level="INFO">Creating Session using : alias=session, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190611 12:44:09.348" endtime="20190611 12:44:09.349"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.348" endtime="20190611 12:44:09.349"></status>
</kw>
<kw name="Send request and log response">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>${GET_USERS_URI}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.406" level="INFO">Get Request using : alias=session, uri=/api/users?page=2, headers=None json=None</msg>
<msg timestamp="20190611 12:44:09.406" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190611 12:44:09.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.349" endtime="20190611 12:44:09.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.407" level="INFO">200</msg>
<status status="PASS" starttime="20190611 12:44:09.407" endtime="20190611 12:44:09.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.407" level="INFO">{"page":2,"per_page":3,"total":12,"total_pages":4,"data":[{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"},{"id":5,"email":"charles.morris@reqres.in","first_name":"Charles","last_name":"Morris","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/stephenmoon/128.jpg"},{"id":6,"email":"tracey.ramos@reqres.in","first_name":"Tracey","last_name":"Ramos","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg"}]}</msg>
<status status="PASS" starttime="20190611 12:44:09.407" endtime="20190611 12:44:09.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${response}</arg>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.407" endtime="20190611 12:44:09.408"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.349" endtime="20190611 12:44:09.408"></status>
</kw>
<kw name="Validate response">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20190611 12:44:09.408" level="INFO">To JSON using : content={"page":2,"per_page":3,"total":12,"total_pages":4,"data":[{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"},{"id":5,"email":"charles.morris@reqres.in","first_name":"Charles","last_name":"Morris","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/stephenmoon/128.jpg"},{"id":6,"email":"tracey.ramos@reqres.in","first_name":"Tracey","last_name":"Ramos","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg"}]} </msg>
<msg timestamp="20190611 12:44:09.408" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190611 12:44:09.408" level="INFO">${json_response} = {'page': 2, 'per_page': 3, 'total': 12, 'total_pages': 4, 'data': [{'id': 4, 'email': 'eve.holt@reqres.in', 'first_name': 'Eve', 'last_name': 'Holt', 'avatar': 'https://s3.amazonaws.com/uifaces/faces/...</msg>
<status status="PASS" starttime="20190611 12:44:09.408" endtime="20190611 12:44:09.409"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>$.data[0].first_name</arg>
</arguments>
<assign>
<var>@{first_name_list}</var>
</assign>
<msg timestamp="20190611 12:44:09.437" level="INFO">@{first_name_list} = [ Eve ]</msg>
<status status="PASS" starttime="20190611 12:44:09.409" endtime="20190611 12:44:09.437"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${first_name_list}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${first_name}</var>
</assign>
<msg timestamp="20190611 12:44:09.438" level="INFO">${first_name} = Eve</msg>
<status status="PASS" starttime="20190611 12:44:09.437" endtime="20190611 12:44:09.438"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${first_name}</arg>
<arg>${expected_first_name}</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.438" endtime="20190611 12:44:09.438"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>$.data[0].last_name</arg>
</arguments>
<assign>
<var>@{lastname_list}</var>
</assign>
<msg timestamp="20190611 12:44:09.468" level="INFO">@{lastname_list} = [ Holt ]</msg>
<status status="PASS" starttime="20190611 12:44:09.438" endtime="20190611 12:44:09.468"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${lastname_list}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${lastname}</var>
</assign>
<msg timestamp="20190611 12:44:09.469" level="INFO">${lastname} = Holt</msg>
<status status="PASS" starttime="20190611 12:44:09.468" endtime="20190611 12:44:09.469"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastname}</arg>
<arg>${expectes_last_name}</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.469" endtime="20190611 12:44:09.469"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.408" endtime="20190611 12:44:09.469"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.348" endtime="20190611 12:44:09.470" critical="yes"></status>
</test>
<status status="PASS" starttime="20190611 12:44:09.342" endtime="20190611 12:44:09.471"></status>
</suite>
<suite id="s1-s4" name="Get request with parameters" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests\Get_request_with_parameters.robot">
<test id="s1-s4-t1" name="Validate get request with parameters">
<kw name="Create connection" library="Common_keywords" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.477" level="INFO">Creating Session using : alias=session, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190611 12:44:09.477" endtime="20190611 12:44:09.478"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.477" endtime="20190611 12:44:09.478"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>value=2</arg>
</arguments>
<assign>
<var>&amp;{parameters}</var>
</assign>
<msg timestamp="20190611 12:44:09.479" level="INFO">&amp;{parameters} = { value=2 }</msg>
<status status="PASS" starttime="20190611 12:44:09.478" endtime="20190611 12:44:09.479"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>/api/users</arg>
<arg>${parameters}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.527" level="INFO">Get Request using : alias=session, uri=/api/users, headers={'value': '2'} json=None</msg>
<msg timestamp="20190611 12:44:09.527" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190611 12:44:09.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.479" endtime="20190611 12:44:09.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.528" level="INFO">{"page":1,"per_page":3,"total":12,"total_pages":4,"data":[{"id":1,"email":"george.bluth@reqres.in","first_name":"George","last_name":"Bluth","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg"},{"id":2,"email":"janet.weaver@reqres.in","first_name":"Janet","last_name":"Weaver","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg"},{"id":3,"email":"emma.wong@reqres.in","first_name":"Emma","last_name":"Wong","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg"}]}</msg>
<status status="PASS" starttime="20190611 12:44:09.527" endtime="20190611 12:44:09.528"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20190611 12:44:09.528" level="INFO">To JSON using : content={"page":1,"per_page":3,"total":12,"total_pages":4,"data":[{"id":1,"email":"george.bluth@reqres.in","first_name":"George","last_name":"Bluth","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg"},{"id":2,"email":"janet.weaver@reqres.in","first_name":"Janet","last_name":"Weaver","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg"},{"id":3,"email":"emma.wong@reqres.in","first_name":"Emma","last_name":"Wong","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg"}]} </msg>
<msg timestamp="20190611 12:44:09.528" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190611 12:44:09.528" level="INFO">${json_response} = {'page': 1, 'per_page': 3, 'total': 12, 'total_pages': 4, 'data': [{'id': 1, 'email': 'george.bluth@reqres.in', 'first_name': 'George', 'last_name': 'Bluth', 'avatar': 'https://s3.amazonaws.com/uiface...</msg>
<status status="PASS" starttime="20190611 12:44:09.528" endtime="20190611 12:44:09.528"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>$.data[0].first_name</arg>
</arguments>
<assign>
<var>@{name_list}</var>
</assign>
<msg timestamp="20190611 12:44:09.553" level="INFO">@{name_list} = [ George ]</msg>
<status status="PASS" starttime="20190611 12:44:09.529" endtime="20190611 12:44:09.553"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${name_list}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20190611 12:44:09.554" level="INFO">${name} = George</msg>
<status status="PASS" starttime="20190611 12:44:09.554" endtime="20190611 12:44:09.554"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${name}</arg>
<arg>George</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.554" endtime="20190611 12:44:09.554"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.477" endtime="20190611 12:44:09.555" critical="yes"></status>
</test>
<status status="PASS" starttime="20190611 12:44:09.472" endtime="20190611 12:44:09.556"></status>
</suite>
<suite id="s1-s5" name="Post request" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests\Post_request.robot">
<test id="s1-s5-t1" name="Validate POST request">
<kw name="Create connection" library="Common_keywords" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.564" level="INFO">Creating Session using : alias=session, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190611 12:44:09.564" endtime="20190611 12:44:09.565"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.564" endtime="20190611 12:44:09.565"></status>
</kw>
<kw name="Get and send request">
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${REQUESTS_FOLDER}/${request}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20190611 12:44:09.565" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Requests\Post_request.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Requests\Post_request.json&lt;/a&gt;'.</msg>
<msg timestamp="20190611 12:44:09.566" level="INFO">${request_body} = {
    "name": "morpheus",
    "job": "leader"
}</msg>
<status status="PASS" starttime="20190611 12:44:09.565" endtime="20190611 12:44:09.566"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20190611 12:44:09.566" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20190611 12:44:09.566" endtime="20190611 12:44:09.567"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>${POST_URI}</arg>
<arg>${request_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.692" level="INFO">Post Request using : alias=session, uri=/api/users, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190611 12:44:09.692" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190611 12:44:09.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.567" endtime="20190611 12:44:09.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${response}</arg>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.693" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.693" endtime="20190611 12:44:09.693"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.565" endtime="20190611 12:44:09.693"></status>
</kw>
<kw name="Validate and log response">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.694" level="INFO">{"id":"418","createdAt":"2019-06-11T09:44:09.674Z"}</msg>
<status status="PASS" starttime="20190611 12:44:09.694" endtime="20190611 12:44:09.694"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190611 12:44:09.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.694" endtime="20190611 12:44:09.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>createdAt</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.695" endtime="20190611 12:44:09.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.695" endtime="20190611 12:44:09.695"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.694" endtime="20190611 12:44:09.695"></status>
</kw>
<kw name="Save response to file">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.text}</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${pretty_printed_response}</var>
</assign>
<msg timestamp="20190611 12:44:09.696" level="INFO">To JSON using : content={"id":"418","createdAt":"2019-06-11T09:44:09.674Z"} </msg>
<msg timestamp="20190611 12:44:09.696" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20190611 12:44:09.696" level="INFO">${pretty_printed_response} = {
    "createdAt": "2019-06-11T09:44:09.674Z",
    "id": "418"
}</msg>
<status status="PASS" starttime="20190611 12:44:09.696" endtime="20190611 12:44:09.696"></status>
</kw>
<kw name="Create Binary File" library="OperatingSystem">
<doc>Creates a binary file with the given content.</doc>
<arguments>
<arg>${RESPONSES_FOLDER}/${response_file}</arg>
<arg>${pretty_printed_response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.698" level="INFO" html="yes">Created binary file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Responses\Post_response.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Responses\Post_response.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190611 12:44:09.697" endtime="20190611 12:44:09.698"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.696" endtime="20190611 12:44:09.698"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.564" endtime="20190611 12:44:09.698" critical="yes"></status>
</test>
<status status="PASS" starttime="20190611 12:44:09.557" endtime="20190611 12:44:09.700"></status>
</suite>
<suite id="s1-s6" name="Put request" source="C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Tests\Put_request.robot">
<test id="s1-s6-t1" name="Validate PUT request">
<kw name="Create connection" library="Common_keywords" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.708" level="INFO">Creating Session using : alias=session, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190611 12:44:09.708" endtime="20190611 12:44:09.709"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.708" endtime="20190611 12:44:09.709"></status>
</kw>
<kw name="Get and send request">
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${request_folder}/${request_file}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20190611 12:44:09.710" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Requests\Put_request.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Requests\Put_request.json&lt;/a&gt;'.</msg>
<msg timestamp="20190611 12:44:09.710" level="INFO">${request_body} = {
    "name": "morpheus",
    "job": "zion resident"
}</msg>
<status status="PASS" starttime="20190611 12:44:09.709" endtime="20190611 12:44:09.710"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20190611 12:44:09.711" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20190611 12:44:09.710" endtime="20190611 12:44:09.711"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>${PUT_URI}</arg>
<arg>${request_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190611 12:44:09.841" level="INFO">Put Request using : alias=session, uri=/api/users/2, data={
    "name": "morpheus",
    "job": "zion resident"
},                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190611 12:44:09.841" level="INFO">c:\users\ryynapet\appdata\local\programs\python\python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190611 12:44:09.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.711" endtime="20190611 12:44:09.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${response}</arg>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.844" endtime="20190611 12:44:09.844"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.709" endtime="20190611 12:44:09.844"></status>
</kw>
<kw name="Validate and log response">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.845" level="INFO">{"updatedAt":"2019-06-11T09:44:09.823Z"}</msg>
<status status="PASS" starttime="20190611 12:44:09.845" endtime="20190611 12:44:09.845"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190611 12:44:09.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190611 12:44:09.845" endtime="20190611 12:44:09.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>updatedAt</arg>
</arguments>
<status status="PASS" starttime="20190611 12:44:09.845" endtime="20190611 12:44:09.846"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.844" endtime="20190611 12:44:09.846"></status>
</kw>
<kw name="Save response to file">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.text}</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${pretty_printed_response}</var>
</assign>
<msg timestamp="20190611 12:44:09.847" level="INFO">To JSON using : content={"updatedAt":"2019-06-11T09:44:09.823Z"} </msg>
<msg timestamp="20190611 12:44:09.847" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20190611 12:44:09.847" level="INFO">${pretty_printed_response} = {
    "updatedAt": "2019-06-11T09:44:09.823Z"
}</msg>
<status status="PASS" starttime="20190611 12:44:09.846" endtime="20190611 12:44:09.847"></status>
</kw>
<kw name="Create Binary File" library="OperatingSystem">
<doc>Creates a binary file with the given content.</doc>
<arguments>
<arg>${response_folder}/Put_response.json</arg>
<arg>${pretty_printed_response}</arg>
</arguments>
<msg timestamp="20190611 12:44:09.848" level="INFO" html="yes">Created binary file '&lt;a href="file://C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Response\Put_response.json"&gt;C:\Users\ryynapet\git\Rest_API_Testing_using_Robot_Framework\Rest_API_Testing_using_Robot_Framework\REST_API_Testing\Response\Put_response.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190611 12:44:09.847" endtime="20190611 12:44:09.848"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.846" endtime="20190611 12:44:09.848"></status>
</kw>
<status status="PASS" starttime="20190611 12:44:09.708" endtime="20190611 12:44:09.848" critical="yes"></status>
</test>
<status status="PASS" starttime="20190611 12:44:09.702" endtime="20190611 12:44:09.849"></status>
</suite>
<status status="PASS" starttime="20190611 12:44:08.806" endtime="20190611 12:44:09.850"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" id="s1-s1" name="Delete request">Tests.Delete request</stat>
<stat pass="1" fail="0" id="s1-s2" name="Get request">Tests.Get request</stat>
<stat pass="1" fail="0" id="s1-s3" name="Get request specific person">Tests.Get request specific person</stat>
<stat pass="1" fail="0" id="s1-s4" name="Get request with parameters">Tests.Get request with parameters</stat>
<stat pass="1" fail="0" id="s1-s5" name="Post request">Tests.Post request</stat>
<stat pass="1" fail="0" id="s1-s6" name="Put request">Tests.Put request</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
